<?xml version="1.0" encoding="UTF-8"?>

<project 
  xmlns="http://maven.apache.org/POM/4.0.0" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
                      http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>pl.jasox</groupId>
    <artifactId>medclinic</artifactId>
    <version>1.1.1</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <groupId>pl.jasox.medclinic</groupId>
  <artifactId>medical-ward-ejb</artifactId>  
  <packaging>jar</packaging>
  <name>Medical Ward EJB Module</name>
  <description> JS Medical Clinic Application EJB Module </description>  
  
  <!-- ===================================================================== -->
  
  <properties>    
    <version.java>1.6</version.java>     
    <version.javaee>6.0</version.javaee>
    <maven.compiler.target>1.6</maven.compiler.target>
    <maven.compiler.source>1.6</maven.compiler.source>
    <!-- Test -->
    <skipTests>true</skipTests>
    <skipITs>${skipTests}</skipITs>
    <skipUTs>${skipTests}</skipUTs>
  </properties>
  
  <!-- ===================================================================== -->
  
  <dependencies>
  
     <!-- Project dependencies -->
    <dependency>
      <groupId>${projectGroup}</groupId>
      <artifactId>${projectName}-domain</artifactId>
      <version>${projectVersion}</version>
      <type>jar</type>
    </dependency> 
    <!--
    <dependency>
       <groupId>${projectGroup}</groupId>
       <artifactId>${projectName}-simple</artifactId>
       <version>${projectVersion}</version>
       <type>jar</type>
    </dependency>   
    -->    
     
    <dependency>    
      <groupId>com.sun.mail</groupId>    
      <artifactId>javax.mail</artifactId>    
      <version>1.4.5</version>
      <scope>${projectScope}</scope>
    </dependency>
    
    <!-- Import the CDI API, we use provided scope as the API is included in JBoss AS 7 -->
    <dependency>
       <groupId>javax.enterprise</groupId>
       <artifactId>cdi-api</artifactId>
       <scope>provided</scope>
    </dependency>
      
    <!-- Import the Common Annotations API (JSR-250), we use provided 
           scope as the API is included in JBoss AS 7 -->
    <dependency>
       <groupId>org.jboss.spec.javax.annotation</groupId>
       <artifactId>jboss-annotations-api_1.1_spec</artifactId>
       <scope>provided</scope>
    </dependency>  
    
    <!-- Import the JAX-RS API, we use provided scope as the API is included in JBoss AS 7 
    <dependency>
       <groupId>org.jboss.spec.javax.ws.rs</groupId>
       <artifactId>jboss-jaxrs-api_1.1_spec</artifactId>
       <scope>provided</scope>
    </dependency>
    
    <dependency>
       <groupId>org.jboss.spec.javax.ws.rs</groupId>
       <artifactId>jboss-jaxrs-api_2.0_spec</artifactId>
       <version>1.0.0.Alpha1</version>
       <scope>provided</scope>
    </dependency>
    -->
    
    <!-- Import the JPA API, we use provided scope as the API is included in JBoss AS 7 -->
    <dependency>
       <groupId>org.hibernate.javax.persistence</groupId>
       <artifactId>hibernate-jpa-2.0-api</artifactId>
       <scope>provided</scope>
    </dependency>
    
    <!-- Hibernate reference -->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>      
      <scope>provided</scope>
    </dependency>
    
    <dependency>     
      <groupId>org.hibernate</groupId>     
      <artifactId>hibernate-c3p0</artifactId>       
      <scope>provided</scope>
    </dependency>
    
    <!-- c3p0 connection management -->    
    <dependency> 
      <groupId>c3p0</groupId> 
      <artifactId>c3p0</artifactId> 
      <version>0.9.1.2</version> 
      <scope>runtime</scope>
    </dependency>   
    
    <!-- p6spy connection management -->
    <dependency>
      <groupId>p6spy</groupId>
      <artifactId>p6spy</artifactId>
      <version>1.3</version>
      <scope>runtime</scope>
    </dependency>

     <!-- DBCP connection management -->
    <dependency>
      <groupId>commons-dbcp</groupId>
      <artifactId>commons-dbcp</artifactId>
      <version>1.2.2</version>
      <scope>runtime</scope>
    </dependency>  
    
    <!-- HSQL database driver -->
    <dependency> 
      <groupId>org.hsqldb</groupId>  
      <artifactId>hsqldb</artifactId>  
      <version>${version.hsql}</version>
      <scope>provided</scope> 
    </dependency>
    
    <!-- MySQL database driver -->
    <dependency>
      <groupId>mysql</groupId> 
      <artifactId>mysql-connector-java</artifactId> 
      <version>${version.mysql}</version>  
      <scope>provided</scope>
    </dependency>     
    
     
    <!-- Import the EJB API, we use provided scope as the API is included in JBoss AS 7 -->
    <dependency>
       <groupId>org.jboss.spec.javax.ejb</groupId>
       <artifactId>jboss-ejb-api_3.1_spec</artifactId>
       <scope>provided</scope>
    </dependency>
    
    <!-- JSR-303 (Bean Validation) Implementation -->
    <!-- Provides portable constraints such as @Email -->
    <!-- Hibernate Validator is shipped in JBoss AS 7 -->
    <dependency>
       <groupId>org.hibernate</groupId>
       <artifactId>hibernate-validator</artifactId>
       <scope>provided</scope>
       <exclusions>
           <exclusion>
               <groupId>org.slf4j</groupId>
               <artifactId>slf4j-api</artifactId>
           </exclusion>
       </exclusions>
    </dependency>
    
    <!-- Import the JSF API, we use provided scope as the API is included in JBoss AS 7 -->
    <dependency>
       <groupId>org.jboss.spec.javax.faces</groupId>
       <artifactId>jboss-jsf-api_2.1_spec</artifactId>
       <scope>provided</scope>
    </dependency>
    
    <!-- Import the Servlet API, we use provided scope as the API is included in JBoss AS 7 -->
    <dependency>
       <groupId>org.jboss.spec.javax.servlet</groupId>
       <artifactId>jboss-servlet-api_3.0_spec</artifactId>
       <scope>provided</scope>
    </dependency>
    
    <!-- Annotation processor to generate the JPA 2.0 metamodel classes 
         for typesafe criteria queries -->
    <dependency>
       <groupId>org.hibernate</groupId>
       <artifactId>hibernate-jpamodelgen</artifactId>           
       <scope>provided</scope>
    </dependency>
    
    <!-- The rewrite library allows us to do url rewriting - 
         used here for rewriting mobile devices to mobile specific views -->
    <dependency>
       <groupId>org.ocpsoft.rewrite</groupId>
       <artifactId>rewrite-servlet</artifactId>
    </dependency>
    
    <!-- The cdi integration allows for CDI injection into the rewrite configuration class -->
    <dependency>
       <groupId>org.ocpsoft.rewrite</groupId>
       <artifactId>rewrite-integration-cdi</artifactId>
    </dependency>
    
    <!-- Annotation processor that raising compilation errors whenever 
         constraint annotations are incorrectly used. -->
    <dependency>
       <groupId>org.hibernate</groupId>
       <artifactId>hibernate-validator-annotation-processor</artifactId>          
       <scope>provided</scope>
    </dependency>
    
    <!--
      Mixing JUnit and TestNG in one module can be done just by adding both
      as a plugin dependencies (not only as project dependencies):
    -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    
    <!-- Arquillian allows you to test enterprise code such as EJBs and 
         Transactional(JTA) JPA from JUnit/TestNG -->
    <dependency>
        <groupId>org.jboss.arquillian.junit</groupId>
        <artifactId>arquillian-junit-container</artifactId>
        <scope>test</scope>
    </dependency>

    <dependency>
        <groupId>org.jboss.arquillian.protocol</groupId>
        <artifactId>arquillian-protocol-servlet</artifactId>
        <scope>test</scope>
    </dependency>

    <!--
    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>      
      <scope>test</scope>
    </dependency>      
    -->
    
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <version>1.1</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
      <version>3.2</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>1.9.5</version>
      <scope>test</scope>
    </dependency>    
    
    <dependency>
      <groupId>xmlunit</groupId>
      <artifactId>xmlunit</artifactId>
      <version>${version.xmlunit}</version>
      <scope>test</scope>
    </dependency>  
      
    <!-- Annotation processor for generating typed loggers -->
    <dependency>
      <groupId>org.jboss.solder</groupId>
      <artifactId>solder-tooling</artifactId>
      <scope>provided</scope>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>org.jboss.solder</groupId>
      <artifactId>solder-impl</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <!-- Seam 
    <dependency>
      <groupId>org.jboss.seam.faces</groupId>
      <artifactId>seam-faces</artifactId>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.seam.international</groupId>
      <artifactId>seam-international</artifactId>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.seam.security</groupId>
      <artifactId>seam-security</artifactId>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.seam.transaction</groupId>
      <artifactId>seam-transaction</artifactId>
      <scope>compile</scope>
    </dependency>  
    -->
    
    <dependency>
      <groupId>org.picketlink.idm</groupId>
      <artifactId>picketlink-idm-core</artifactId>
    </dependency>
    
    <dependency>
      <groupId>com.ocpsoft</groupId>
      <artifactId>ocpsoft-pretty-time</artifactId>      
    </dependency>
        
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
    </dependency>
        
    
    <!-- Obtaining ShrinkWrap Resolvers for use in your system can be done in 
         a single pass by declaring a dependency upon the depchain module  -->
    <dependency> 
      <groupId>org.jboss.shrinkwrap.resolver</groupId>
      <artifactId>shrinkwrap-resolver-depchain</artifactId>          
      <scope>test</scope>
      <type>pom</type>
    </dependency>     
    
    <!--
    <dependency> 
       <groupId>org.slf4j</groupId>
       <artifactId>slf4j-simple</artifactId>
       <version>${version.slf4j}</version> 
       <scope>${projectScope}</scope>
    </dependency>
    -->
    <!--
    <dependency>
       <groupId>org.slf4j</groupId>
       <artifactId>slf4j-log4j12</artifactId>
       <version>${version.slf4j}</version>
    </dependency>
    
    <dependency>
       <groupId>org.slf4j</groupId>
       <artifactId>jul-to-slf4j</artifactId>
       <version>${version.slf4j}</version>
       <scope>test</scope>
    </dependency>
    -->
    
    <dependency>          
      <groupId>log4j</groupId>          
      <artifactId>log4j</artifactId>       
      <scope>${projectScope}</scope>                    
    </dependency>
    
        
    <!-- JPA EclipseLink -->
    <dependency>
      <groupId>org.eclipse.persistence</groupId>
      <artifactId>org.eclipse.persistence.jpa</artifactId>
      <version>${version.eclipselink}</version>
    </dependency>
    
    <dependency>
      <groupId>org.eclipse.persistence</groupId>
      <artifactId>org.eclipse.persistence.jpa.modelgen.processor</artifactId>
      <version>${version.eclipselink}</version>
    </dependency>

    <!-- Derby -->
    <dependency>
      <groupId>org.apache.derby</groupId>
      <artifactId>derby</artifactId>
      <version>${version.derby}</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>org.apache.derby</groupId>
      <artifactId>derbyclient</artifactId>
      <version>${version.derby}</version>
      <scope>test</scope>
    </dependency>
    
  </dependencies>
  
  <!-- ===================================================================== -->

  <build>

    <defaultGoal>package</defaultGoal>

    <finalName>${projectName}-ejb-${projectVersion}</finalName>

    <plugins>        
     
      <plugin>
        <artifactId>maven-eclipse-plugin</artifactId>
        <version>2.8</version>
        <configuration>
          <additionalBuildcommands>
            <!-- annoyingly creates a bin directory 
            <buildCommand> 
              <name>org.eclipse.wst.jsdt.core.javascriptValidator</name> 
            </buildCommand> 
            -->
            <buildCommand>
              <name>
                org.jboss.tools.common.verification.verifybuilder
              </name>
            </buildCommand>
          </additionalBuildcommands>

          <additionalConfig>
            <file>
              <name>.settings/org.maven.ide.eclipse.prefs</name>
              <content>
                eclipse.preferences.version=1
                fullBuildGoals=process-test-resources
                includeModules=false
                resolveWorkspaceProjects=true
                resourceFilterGoals=process-resources
                resources\:testResources
                skipCompilerPlugin=true
                version=1
              </content>
            </file>
          </additionalConfig>

          <additionalProjectFacets>
            <jst.jsf>2.0</jst.jsf>
          </additionalProjectFacets>
          <additionalProjectnatures>
            <projectnature>org.eclipse.wst.jsdt.core.jsNature</projectnature>
            <projectnature>org.jboss.tools.jsf.jsfnature</projectnature>
          </additionalProjectnatures>
          <workspace>${user.home}/.eclipse/workspace</workspace>
          <wtpdefaultserver>JBossAS</wtpdefaultserver>
          <wtpversion>2.0</wtpversion>
          <downloadSources>true</downloadSources>
          <downloadJavadocs>true</downloadJavadocs>

        </configuration>
      </plugin>
      
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire.version}</version>
        <configuration>
          <skip>${skipUTs}</skip>
          <!--
          <suiteXmlFiles>
             <suiteXmlFile>
                 ${basedir}/src/test/resources/testng.xml
             </suiteXmlFile>
          </suiteXmlFiles>
          -->
          <systemPropertyVariables>
             <java.util.logging.config.file>
                 ${basedir}/src/test/resources/logging.properties               
             </java.util.logging.config.file>
          </systemPropertyVariables>
        </configuration>
      </plugin>
  
    </plugins>
    
  </build>
    
  <!-- ===================================================================== -->  
    
  <profiles>    
    
    <profile>
      <id>distribution</id>
      <activation>
        <property>
          <name>release</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
  
    <profile>
      <id>jbossas6</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>arquillian</name>
          <value>jbossas-remote-6</value>
        </property>
      </activation>
       <build>  
        <resources>      
          <resource>
            <directory>${basedir}/src/main/resources-jbossas6</directory>
            <filtering>true</filtering>
            <includes> 
              <include>**/*.xml</include> 
              <include>**/*.properties</include>
            </includes>
          </resource>
          <resource>
            <directory>${basedir}/src/main/resources-jbossas6</directory>
            <filtering>false</filtering>
            <excludes>
              <exclude>**/*.xml</exclude>
              <exclude>**/*.properties</exclude>
            </excludes>
          </resource>    
        </resources>
        <testResources>           
           <testResource>
              <directory>${basedir}/src/test/resources</directory>
              <filtering>true</filtering>
              <includes> 
                <include>**/*.xml</include> 
                <include>**/*.properties</include>
              </includes>
           </testResource>
           <testResource>
              <directory>${basedir}/src/test/resources-jbossas6</directory>
              <filtering>true</filtering>
              <includes> 
                <include>**/*.xml</include> 
                <include>**/*.properties</include>
              </includes>
           </testResource>
        </testResources>  
       </build>
    </profile>
  
    <profile>
      <id>jbossas7</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>arquillian</name>
          <value>jbossas-remote-7</value>
        </property>
      </activation>
      <build>
        <resources>
          <resource>
            <directory>${basedir}/src/main/resources-jbossas7</directory>
            <filtering>true</filtering>
            <includes> 
              <include>**/*.xml</include> 
              <include>**/*.properties</include>
            </includes>
          </resource>
          <resource>
            <directory>${basedir}/src/main/resources-jbossas7</directory>
            <filtering>false</filtering>
            <excludes>
              <exclude>**/*.xml</exclude>
              <exclude>**/*.properties</exclude>
            </excludes>
          </resource> 
        </resources>
        <testResources> 
           <testResource>              
              <directory>fake-test-hsql-dir-2</directory>
              <filtering>false</filtering>
              <includes> 
                 <include>**/*.script</include> 
                 <include>**/*.properties</include>
              </includes>
           </testResource>           
           <testResource>
              <directory>${basedir}/src/test/resources</directory>
              <filtering>true</filtering>
              <includes> 
                <include>**/*.xml</include> 
                <include>**/*.properties</include>
              </includes>
           </testResource>
           <testResource>
              <directory>${basedir}/src/test/resources-jbossas7</directory>
              <filtering>true</filtering>
              <includes> 
                <include>**/*.xml</include> 
                <include>**/*.properties</include>
              </includes>
           </testResource>           
        </testResources>
      </build>
    </profile>
  
    <profile>
      <id>glassfish</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>arquillian</name>
          <value>glassfish-remote-3.1</value>
        </property>
      </activation>
      <build>
        <resources>
          <resource>
            <directory>${basedir}/src/main/resources-glassfish</directory>
            <filtering>true</filtering>
            <includes> 
              <include>**/*.xml</include> 
              <include>**/*.properties</include>
            </includes>
          </resource>
          <resource>
            <directory>${basedir}/src/main/resources-glassfish</directory>
            <filtering>false</filtering>
            <excludes>
              <exclude>**/*.xml</exclude>
              <exclude>**/*.properties</exclude>
            </excludes>
          </resource> 
        </resources>
        <testResources>                          
           <testResource>              
              <directory>${basedir}/src/test/resources</directory>
              <filtering>true</filtering>
              <includes> 
                <include>**/*.xml</include> 
                <include>**/*.properties</include>
              </includes>
           </testResource>
           <testResource>              
              <directory>${basedir}/src/test/resources-glassfish</directory>
              <filtering>true</filtering>
              <includes> 
                <include>**/*.xml</include> 
                <include>**/*.properties</include>
              </includes>
           </testResource>
        </testResources>
      </build>
    </profile>
    
    <profile>
      <id>openshift</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>arquillian</name>
          <value>openshift-express</value>
        </property>
      </activation>
      <build>
        <resources>
          <resource>
            <directory>${basedir}/src/main/resources-openshift-express</directory>
            <filtering>true</filtering>
            <includes> 
              <include>**/*.xml</include> 
              <include>**/*.properties</include>
            </includes>
          </resource>
          <resource>
            <directory>${basedir}/src/main/resources-openshift-express</directory>
            <filtering>false</filtering>
            <excludes>
              <exclude>**/*.xml</exclude>
              <exclude>**/*.properties</exclude>
            </excludes>
          </resource> 
        </resources>
        <testResources>                          
           <testResource>              
              <directory>${basedir}/src/test/resources</directory>
              <filtering>true</filtering>
              <includes> 
                <include>**/*.xml</include> 
                <include>**/*.properties</include>
              </includes>
           </testResource>
           <testResource>              
              <directory>${basedir}/src/test/resources-openshift-express</directory>
              <filtering>true</filtering>
              <includes> 
                <include>**/*.xml</include> 
                <include>**/*.properties</include>
              </includes>
           </testResource>
        </testResources>
      </build>
    </profile>
    
    <profile>
      <!-- -->
      <id>jbossas-managed-6</id>
      <activation>
        <property>
          <name>arquillian</name>
          <value>jbossas-managed-6</value>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.jboss.arquillian.container</groupId>
          <artifactId>arquillian-jbossas-managed-6</artifactId>
          <!-- <version>1.0.0.CR3</version> -->
          <scope>test</scope>
        </dependency>        
      </dependencies>
    </profile>

    <profile>
      <id>jbossas-remote-6</id>
      <activation>
        <property>
          <name>arquillian</name>
          <value>jbossas-remote-6</value>
        </property>
      </activation>
      <dependencies> 
        <dependency>
            <groupId>org.jboss.arquillian.container</groupId>
            <artifactId>arquillian-jbossas-remote-6</artifactId>
            <!-- <version>1.0.0.CR3</version> -->
          <scope>test</scope>
        </dependency>             
        <dependency>
            <groupId>org.jboss.jbossas</groupId>
            <artifactId>jboss-as-profileservice-client</artifactId>
            <version>6.1.0.Final</version>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>org.jboss.deployers</groupId>
            <artifactId>jboss-deployers-client-spi</artifactId>
            <version>2.2.0.M2</version>
            <scope>test</scope>
        </dependency>     
      </dependencies>
    </profile>
    
    <profile>      
      <id>jbossas-managed-7</id>
      <activation>
        <property>
          <name>arquillian</name>
          <value>jbossas-managed-7</value>
        </property>
      </activation>
      <dependencies> 
        <dependency>
            <groupId>org.jboss.spec</groupId>
            <artifactId>jboss-javaee-6.0</artifactId>            
            <type>pom</type>
            <scope>provided</scope>
        </dependency>       
        <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-arquillian-container-managed</artifactId>          
            <scope>test</scope>  
        </dependency> 
        <dependency>
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet</artifactId>
            <scope>test</scope>
        </dependency>              
      </dependencies>
      <build>
          <testResources>
              <testResource>
                  <directory>${basedir}/src/test/resources</directory>
                  <filtering>true</filtering>
              </testResource>
              <testResource>
                  <directory>${basedir}/src/test/resources-jbossas7-managed</directory>
                  <filtering>true</filtering>
              </testResource>
          </testResources>
        </build>
    </profile>

    <profile>
      <id>jbossas-remote-7</id>
      <activation>
        <property>
          <name>arquillian</name>
          <value>jbossas-remote-7</value>
        </property>
      </activation>
      <dependencies>
        <dependency>
            <groupId>org.jboss.spec</groupId>
            <artifactId>jboss-javaee-6.0</artifactId>            
            <type>pom</type>
            <scope>provided</scope>
        </dependency>        
        <dependency>
          <groupId>org.jboss.as</groupId>
          <artifactId>jboss-as-arquillian-container-remote</artifactId>          
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.arquillian.protocol</groupId>
          <artifactId>arquillian-protocol-servlet</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>  
    
    <!-- -->
    <profile>
        <id>glassfish-embedded-3.1</id>
        <activation>
          <property>
            <name>arquillian</name>
            <value>glassfish-embedded-3.1</value>
          </property>
        </activation>
        <dependencies>                    
            <dependency>
                <groupId>org.jboss.arquillian.container</groupId>
                <artifactId>arquillian-glassfish-embedded-3.1</artifactId>
                <!-- <version>1.0.0.CR4</version> -->  
                <scope>test</scope>
            </dependency> 
            <dependency>
                <groupId>org.glassfish.main.extras</groupId>
                <artifactId>glassfish-embedded-all</artifactId>
                <version>${version.glassfish}</version>
                <scope>provided</scope>                
            </dependency>            
            <!-- HSQL database driver -->
            <dependency> 
                <groupId>org.hsqldb</groupId>  
                <artifactId>hsqldb</artifactId>  
                <version>2.2.7</version>
                <scope>test</scope> 
            </dependency>
            <!-- MySQL database driver -->
            <dependency>
                <groupId>mysql</groupId> 
                <artifactId>mysql-connector-java</artifactId> 
                <version>5.1.5</version>  
                <scope>test</scope>
            </dependency>                     
        </dependencies>
        <build>
            <testResources>
                <testResource>
                    <directory>${basedir}/src/test/resources</directory>
                    <filtering>true</filtering>
                </testResource>
                <testResource>
                    <directory>${basedir}/src/test/resources-glassfish-embedded</directory>
                    <filtering>true</filtering>
                </testResource>
            </testResources>
        </build>
    </profile>   
    
    <profile>
        <id>glassfish-managed-3.1</id>
        <activation>
          <property>
            <name>arquillian</name>
            <value>glassfish-managed-3.1</value>
          </property>
        </activation>
        <dependencies>           
             <dependency>
                <groupId>org.jboss.arquillian.container</groupId>
                <artifactId>arquillian-glassfish-managed-3.1</artifactId>
                <version>1.0.0.CR4</version> 
                <scope>test</scope>
            </dependency>                     
        </dependencies>
        <build>
            <testResources>
                <testResource>
                    <directory>${basedir}/src/test/resources</directory>
                    <filtering>true</filtering>
                </testResource>
                <testResource>
                    <directory>${basedir}/src/test/resources-glassfish-managed</directory>
                    <filtering>true</filtering>
                </testResource>
            </testResources>
        </build>
    </profile>  

    <profile>
      <id>glassfish-remote-3.1</id>      
      <activation>
        <property>
          <name>arquillian</name>
          <value>glassfish-remote-3.1</value>
        </property>
      </activation>
      <dependencies>
        <dependency>
           <groupId>org.jboss.weld</groupId>
           <artifactId>weld-api</artifactId>           
           <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.jboss.arquillian.container</groupId>
          <artifactId>arquillian-glassfish-remote-3.1</artifactId> 
          <!-- <version>1.0.0.CR4</version> -->                         
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>openshift-express</id>
      <activation>
        <property>
          <name>arquillian</name>
          <value>openshift-express</value>
        </property>
      </activation>
      <dependencies>        
        <dependency>
          <groupId>org.jboss.arquillian.container</groupId>
          <artifactId>arquillian-openshift-express</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
    
    <profile>
      <id>arquillian-weld-ee-embedded</id>
      <activation>
          <activeByDefault>false</activeByDefault>
      </activation>
      <dependencies>
          <dependency>
              <groupId>org.jboss.spec</groupId>
              <artifactId>jboss-javaee-6.0</artifactId>
              <type>pom</type>
              <scope>provided</scope>
          </dependency>
          <dependency>
              <groupId>org.jboss.arquillian.container</groupId>
              <artifactId>arquillian-weld-ee-embedded-1.1</artifactId>              
              <scope>test</scope>
          </dependency>
          <dependency>
              <groupId>org.jboss.weld</groupId>
              <artifactId>weld-core</artifactId>              
              <scope>test</scope>
          </dependency>
          <dependency>
              <groupId>org.slf4j</groupId>
              <artifactId>slf4j-simple</artifactId>              
              <scope>test</scope>
          </dependency>
      </dependencies>
    </profile>

  </profiles>
  

</project>


