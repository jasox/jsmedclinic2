<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
        
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:h="http://java.sun.com/jsf/html"
                template="/WEB-INF/layout/template.xhtml">

    <ui:param name="pageClass" value="home"/>

    <ui:define name="content">
    
        <div class="section">
            <h1>#{bundles.messages.home_header}</h1>
            <p> #{bundles.messages.home_body}  </p>
            <p> #{bundles.messages.home_note}  </p>            
        </div>
    </ui:define>
    
 <!--  
 The majority of the Seam Security API is centered around the Identity bean. 
 This bean represents the identity of the current user, the default implementation of which is 
 a session-scoped, named bean. 
 This means that once logged in, a user's identity is scoped to the lifecycle of their current session. 
 The two most important methods that you need to know about at this stage in regard to authentication 
 are login() and logout(), which as the names suggest are used to log the user in and out, respectively.
 As the default implementation of the Identity bean is named, it may be referenced via an EL expression, 
 or be used as the target of an EL action.
 
 The other important bean to know about right now is the Credentials bean. 
 Its' purpose is to hold the user's credentials (such as their username and password) before the user 
 logs in. 
 The default implementation of the Credentials bean is also a session-scoped, named bean (just like
 the Identity bean). The Credentials bean has two properties, username and credential that are used 
 to hold the current user's username and credential (e.g. a password) values. The default implementation 
 of the Credentials bean provides an additional convenience property called password, which may be used 
 in lieu of the credential property when a simple password is required.    
 -->
    <ui:define name="sidebar">
        <h:form id="login" rendered="#{! identity.loggedIn}">
            <fieldset>
                <div>
                    <h:outputLabel for="username" 
                                   value="#{bundles.messages.home_usernameLabel}"/>
                    <h:inputText id="username"  
                                 value="#{credentials.username}" style="width: 175px;"/>
                    <div class="errors">
                        <h:message for="username"/>
                    </div>
                </div>
                
                <div>
                    <h:outputLabel for="password" 
                                   value="#{bundles.messages.home_passwordLabel}"/>
                    <h:inputSecret id="password"  
                                   value="#{credentials.password}" style="width: 175px;"/>
                </div>
                
		            <span class="errors">
		               <h:messages errorClass="error" styleClass="messages" id="messages" globalOnly="true"/>
		            </span>

                <div class="buttonBox">
                    <h:commandButton id="login" 
                                     action="#{identity.login}" 
                                     value="#{bundles.messages.home_loginAction}"/>
                </div>
                
            </fieldset>
        </h:form>

    </ui:define>

</ui:composition>

