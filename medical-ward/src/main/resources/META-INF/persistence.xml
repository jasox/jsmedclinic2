<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.0" 
    xmlns="http://java.sun.com/xml/ns/persistence" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://java.sun.com/xml/ns/persistence
                        http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd">
	<persistence-unit name="booking">
	  <!-- Explicitly Listed Classes
    When the persistence unit is small or when there is not a large number of entities, 
    you may want to list classes explicitly in class elements in the persistence.xml file. 
    This will cause the listed classes to be added to the persistence unit.
    Since a class that is local to the deployment unit will already be included, 
    we don’t need to list it in a class element. 
    Explicitly listing the classes is really useful in three main cases.
    The first is when there are additional classes that are not local to the deployment unit JAR.
    For example, there is an embedded object class in a different JAR that you want to use in 
    an entity in your persistence unit. You would list the fully qualified class in the 
    class element in the persistence.xml file.
    You will also need to ensure that the JAR or directory that contains the class is 
    on the classpath of the deployed component, for example, by adding it to the manifest 
    classpath of the deployment JAR.
    In the second case, we want to exclude one or more classes that may be annotated as an entity. 
    Even though the class may be annotated with @Entity, we don’t want it to be treated 
    as an entity in this particular deployed context. For example, it may be used as 
    a transfer object and need to be part of the deployment unit. In this case, we need to 
    make use of a special element called exclude-unlisted-classes in the persistence.xml file, 
    which disables local classes from being added to the persistence unit. 
    When exclude-unlisted-classes is used, none of the classes in the local classes category described
    earlier will be included.
    -->	   
     <class>pl.jasox.medward.model.User</class>
     <class>pl.jasox.medward.model.Booking</class>
     <class>pl.jasox.medward.model.Hotel</class> 
     <exclude-unlisted-classes>false</exclude-unlisted-classes>
	</persistence-unit>
</persistence>
